<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env php -n
&lt;?php
require_once $_ENV['TM_BUNDLE_SUPPORT'].'/includes/ui.php';

$source = file_get_contents('php://stdin');

@include($_ENV['TM_PROJECT_DIRECTORY'].'/vendor/autoload.php');
if(!class_exists('Behat\Gherkin\Gherkin',true)):
	UI::alert(UI::ALERT_CRITICAL,"Behat Missing","Unable to load Behat Gherkin library.");
	exit(206);
endif;

use Behat\Gherkin\Gherkin,
    Behat\Gherkin\Exception\ParserException,
    Behat\Gherkin\Keywords\ArrayKeywords,
    Behat\Gherkin\Dumper\GherkinDumper,
    Behat\Gherkin\Lexer,
    Behat\Gherkin\Parser;

$keywords = new ArrayKeywords(array(
        'en' =&gt; array(
            'feature' =&gt; 'Feature|Business Need|Ability',
            'background' =&gt; 'Background',
            'scenario' =&gt; 'Scenario',
            'scenario_outline' =&gt; 'Scenario Outline|Scenario Template',
            'examples' =&gt; 'Examples|Scenarios',
            'given' =&gt; 'Given',
            'when' =&gt; 'When',
            'then' =&gt; 'Then',
            'and' =&gt; 'And',
            'but' =&gt; 'But'
        )
    )
);
$keywords-&gt;setLanguage('en');
$lexer = new Lexer($keywords);
$parser = new Parser($lexer);
$dumper = new GherkinDumper($keywords);

try {
	$feature = $parser-&gt;parse($source);
} catch (ParserException $exception) {
  UI::alert(UI::ALERT_CRITICAL,"Parser Exception",$exception-&gt;getMessage());
	exit(206);
}

file_put_contents('php://stdout', $dumper-&gt;dumpFeature( $feature ) );
exit(0);
?&gt;</string>
	<key>input</key>
	<string>document</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^H</string>
	<key>name</key>
	<string>Tidy</string>
	<key>outputCaret</key>
	<string>heuristic</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>replaceDocument</string>
	<key>scope</key>
	<string>source.feature</string>
	<key>uuid</key>
	<string>CEC6FDA7-5C1D-4DE1-A6EE-E6A60B3AF2A5</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
